@startuml
autonumber
actor "Estafeta" as EST

participant ":RegistarEntregaUI" as UI
participant ":RegistarEntregaController" as CTRL
participant "AplicacaoPOT" as _APP
participant "app\n:AplicacaoPOT" as APP
participant "sessao\n:SessaoUtilizador" as SESSAO

participant ":EstafetaDB" as ESTDB
participant ":EntregaDB" as ENTRDB
participant "entr:Entrega" as ENTR

participant ":EncomendaDB" as RENC
participant ":ScooterDB" as RS


activate EST
EST -> UI : inicia registo de entrega
activate UI
UI -> CTRL : getEstafeta()
activate CTRL
CTRL -> _APP: app = getInstance()
activate _APP
|||
deactivate _APP
CTRL -> APP: sessao = getSessaoAtual()
activate APP
|||
deactivate APP

CTRL -> SESSAO: email = getEmailUtilizador()
activate SESSAO
|||
deactivate SESSAO
CTRL -> ESTDB : est=getEstafetaByEmail(email)
activate ESTDB
deactivate ESTDB
deactivate CTRL
UI --> EST : solicita os dados (dataInicio, dataFim)
deactivate UI

EST -> UI : introduz dados solicitados
activate UI
UI -> CTRL : novaEntrega(dataInicio, dataFim)
activate CTRL
CTRL -> ENTRDB : idEntrega=generateIdEntrega()
activate ENTRDB
deactivate ENTRDB
CTRL -> ENTRDB : entr=novaEntrega(idEntrega, dataInicio, dataFim)
activate ENTRDB
ENTRDB -> ENTR ** : create(idEntrega, dataInicio, dataFim)
activate ENTR
ENTR -> ENTR : addEstafeta(est)
deactivate ENTR
deactivate ENTRDB
deactivate CTRL
UI -> CTRL : getListaEncomenda()
activate CTRL
CTRL -> RENC : lenc=getListaEncomenda()
activate RENC
deactivate RENC
deactivate CTRL
UI --> EST : mostra a lista de encomendas
loop
UI --> EST : solicita a introdução de uma encomenda(idEncomenda, dataPedida, preco, pesoEncomenda, taxa, estadoEncomenda, listaProdutos)
deactivate UI


EST -> UI : introduz os dados solicitados
activate UI
UI -> CTRL : novaEncomenda(idEncomenda, dataPedida, preco, pesoEncomenda, taxa, estadoEncomenda, listaProdutos)
activate CTRL
CTRL -> ENTR : en=novaEncomenda(idEncomenda, dataPedida, preco, pesoEncomenda, taxa,  estadoEncomenda, listaProdutos)
deactivate CTRL
activate ENTR
ENTR -> ENTR : addEncomenda(en)
deactivate ENTR
end loop
UI -> CTRL : getListaScooter()
activate CTRL
CTRL -> RS : ls=getListaScooter()
activate RS
deactivate RS
deactivate CTRL
UI --> EST : mostra a lista de scooters e solicita escolha de uma scooter(idScooter, percentagemBateria, potencia, pesoMaximo, pesoScooter)
deactivate UI


EST -> UI : introduz os dados solicitados
activate UI
UI -> CTRL : novaScooter(idScooter, percentagemBateria, potencia, pesoMaximo, pesoScooter)
activate CTRL
CTRL -> ENTR : s=novaScooter(idScooter, percentagemBateria, potencia, pesoMaximo, pesoScooter)
deactivate CTRL
activate ENTR
ENTR -> ENTR : addScooter(s)
deactivate ENTR
UI --> EST : apresenta dados e solicita confirmação
deactivate UI


EST -> UI : confirma os dados
activate UI
UI -> CTRL : registaEntrega()
activate CTRL
CTRL-> ENTRDB : registaEntrega(entr)
activate ENTRDB
ENTRDB -> ENTRDB : validaEntrega(entr)
ENTRDB -> ENTRDB : addEntrega(entr)
deactivate ENTRDB

UI --> EST : informa operação bem sucedida
deactivate CTRL
deactivate UI

deactivate EST

@enduml