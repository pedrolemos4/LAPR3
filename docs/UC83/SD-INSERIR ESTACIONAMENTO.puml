@startuml
autonumber

actor "Administrador" as ADM
participant ":InserirEstacionamentosUI" as UI
participant ":InserirEstacionamentosController" as CTL
participant ":FarmaciaDB" as FDB
participant ":ParqueDB" as PDB
participant ":EstacionamentoDB" as EDB
participant "estac:Estacionamento" as ESTAC

activate ADM
ADM -> UI : inserção de estacionamentos
activate UI
UI --> ADM : solicita dados do parque (NIF da farmácia)
deactivate UI

ADM -> UI : introduz os dados solicitados

activate UI
UI -> CTL : farmacia = getFarmaciaByNIF(nif)
activate CTL
CTL -> FDB : farmacia = getFarmaciaByNIF(nif)
activate FDB
deactivate FDB

UI -> CTL : lstParques = getListaParquesByFarmaciaNif(nif)
CTL -> PDB : lstParques = getLstParquesByFarmaciaNif(nif)
activate PDB
deactivate PDB
deactivate CTL
UI --> ADM : solicita dados do parque (id do parque)
deactivate UI

ADM -> UI : introduz os dados solicitados
activate UI

UI -> CTL : numMax = getNumMaxParqueByNIF(nif, idParque)
activate CTL
CTL -> PDB : numMax = getNumMaxParqueByNIF(nif, idParque)
activate PDB
deactivate PDB
deactivate CTL

loop
UI --> ADM : solicita dados dos estacionamentos (disponibilidade do carregador)
deactivate UI

ADM --> UI : introduz os dados solicitados
activate UI

UI -> CTL : novoEstacionamento(numeroLote, carregador, idParque)
activate CTL

CTL -> EDB: estac = novoEstacionamento(numeroLote, carregador, idParque)
activate EDB

EDB --> ESTAC ** : create(numeroLote, carregador, idParque)

deactivate EDB
deactivate CTL
end

UI --> ADM : apresenta dados dos estacionamentos e solicita confirmação
deactivate UI
ADM -> UI : confirma
activate UI
UI -> CTL : registaEstacionamentos(lEstac)

loop
activate CTL
CTL -> EDB :registaEstacionamento(estac)
activate EDB

EDB -> EDB : validaEstacionamento(estac)
deactivate EDB
deactivate CTL
end
UI --> ADM: informa sucesso da operação

deactivate UI
deactivate ADM
@enduml
