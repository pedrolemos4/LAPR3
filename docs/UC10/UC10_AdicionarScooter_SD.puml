@startuml
autonumber

actor "Administrador" as ADMIN

participant ":AdminUI" as UI
participant ":VeiculoController" as CTRL
participant ":VeiculoDB" as SCHL
participant "veiculo :Veiculo" as SCOOT

activate ADMIN
ADMIN -> UI : inicia a adição de nova scooter
activate UI
UI -> ADMIN : questiona se pretende que a scooter tenha número único ou QrCode
deactivate UI

alt 
ADMIN -> UI : escolhe id
activate UI
UI -> CTRL : generateIdScooter()
activate CTRL
CTRL -> SCHL : idScooter = generateIdScooter()
activate SCHL
deactivate SCHL 
deactivate CTRL
end alt

alt 
ADMIN -> UI : escolhe QrCode
UI -> CTRL : generateQrCode()
activate CTRL
CTRL -> SCHL : qrCode = generateQrCode()
activate SCHL
deactivate SCHL
deactivate CTRL
end alt

UI -> ADMIN : solicita os restantes dados necessários da scooter
deactivate UI
ADMIN -> UI : insere os dados (descricao,tipo,capacidade,percentagem de bateria, peso da scooter,peso máximo,potencia,área frontal,estado)
activate UI
UI -> CTRL : addVeiculo(descricao,tipo,capacidade,percentagem de bateria, peso da scooter,peso máximo,potencia,área frontal,estado)
activate CTRL
CTRL -> SCHL : addVeiculo(descricao,tipo,capacidade,percentagem de bateria, peso da scooter,peso máximo,potencia,área frontal,estado)
activate SCHL
deactivate SCHL
CTRL -> SCHL : veiculo = new Veiculo(idVeiculo,descricao,tipo,capacidade,percentagem de bateria, peso da scooter,peso máximo,potencia,área frontal,estado)
activate SCHL
SCHL -> SCOOT : create (idVeiculo,descricao,tipo,capacidade,percentagem de bateria, peso da scooter,peso máximo,potencia,área frontal,estado)
activate SCOOT
deactivate SCOOT
deactivate SCHL
deactivate CTRL
  
UI --> ADMIN : apresenta dos dados e solicita confirmação
deactivate UI

ADMIN -> UI : confirma os dados da scooter
activate UI 
UI -> CTRL : veiculoDB()
activate CTRL
CTRL -> SCHL : veiculoDB(veiculo)
activate SCHL
SCHL -> SCHL : validaVeiculo(veiculo)
SCHL -> SCHL : addVeiculo(veiculo)
deactivate SCHL
deactivate CTRL
deactivate UI
deactivate ADMIN

@enduml
