@startuml
autonumber
'hide footbox
actor "Cliente" as CLI

participant ":RealizaPagamentoUI" as UI
participant ":RealizaPagamentoController" as CTRL
participant "AplicacaoPOT" as _APP
participant "app\n:AplicacaoPOT" as APP
participant "sessao\n:SessaoUtilizador" as SESSAO
participant ":ClienteDataHandler" as CDH
participant ":ProdutoDataHandler" as PDH
participant ":EncomendaDataHandler" as EDH
participant "enc: Encomenda" as ENC
participant ":PagamentoDataHandler" as PAD
participant "pag: Pagamento" as PAG


CLI --> UI : pretende realizar o pagamento
activate CLI
activate UI

UI --> CTRL : getListClients()
activate CTRL

CTRL -> _APP: app = getInstance()
activate _APP
|||
deactivate _APP

CTRL -> APP: sessao = getSessaoAtual()
activate APP
|||
deactivate APP

CTRL --> SESSAO : email = getEmail()
activate SESSAO
|||
deactivate SESSAO


CTRL --> CDH : cliente = getClienteByEmail(email)
activate CDH
deactivate CDH

CTRL --> PDH : listaProdutos = getListaProdutos()
activate PDH
deactivate PDH

CTRL --> EDH : getEncomenda()
activate EDH
deactivate EDH

CTRL --> ENC : preco = getPreco()
activate ENC
deactivate ENC

CTRL --> ENC : taxa = getTaxa()
activate ENC
deactivate ENC

CTRL --> PAD : idPagamento = generateIdPagamento()
activate PAD
CTRL --> PAD : novoPagamento(idPagamento, preco, taxa)

PAD --> PAG ** : create(preco, taxa)
deactivate PAD

deactivate CTRL

UI --> CLI : apresenta o preco e a lista de produtos da encomenda e solicita confirmação
deactivate UI

deactivate CTRL

CLI --> UI : confirma
activate UI

UI --> CTRL : registaPagamento()
activate CTRL

CTRL --> PAD : registaPagamento(pag)
activate PAD

PAD --> PAD : validaPagamento(pag)
PAD --> PAD : addPagamento(pag)

deactivate PAD

deactivate CTRL

UI --> CLI : informa o sucesso da operação
deactivate UI
deactivate CLI

@enduml
